.TH rule30_rev_string 3 "FEBRUARY 1, 2016" "rule30 0.0.1" "Rule 30 cellular automaton library"
.SH NAME
rule30_rev_string \- reverse-transform a bit array by Wolfram's Rule 30.
.SH SYNOPSIS
.nf
.B "#include <rule30.h>
.sp
.BI "struct parents *rule30_rev_string(const struct bitfield *"input "); 
.fi
.SH DESCRIPTION
The \fBrule30_rev_string()\fR function takes a pointer to the bit array 
\fIinput\fR, reverse-tranforms it according to \fBWolfram's Rule 30\fR, and 
returns the 4 possible parent combinations packed in the 'parents' structure. 
For details about Rule 30, see manual page for 
.BR bitfield (3).
.SH EXAMPLE
E.g. the following code
.sp
.RS
/* create and fill the child string, 5 bits long */
.br
struct bitfield *input = str2bf("00100");
.br
/* transform */
.br
struct parents *output = rule30_rev_string(input);
.br
/* print one of the four possible parents */
.br
bfprint((output->parent[0]));
.br
.RE
.LP
should return "1110000".
.SH "SEE ALSO"
For the full list of rule30 functions and their descriptions, see manual page 
for
.BR rule30 (3).
.SH AUTHOR
Vitalie CIUBOTARU
